{"version":3,"sources":["TableContent.js","Form.js","App.js","index.js"],"names":["TableContent","props","useState","isEditing","setEditing","name","newName","setNewName","address","newAddress","setNewAddress","phone","newPhone","setNewPhone","newData","handleSubmit","e","preventDefault","isNaN","alert","editTask","id","editingTemplate","number","onSubmit","type","className","value","onChange","target","onClick","viewTemplate","deleteTask","Form","setName","setAddress","setPhone","data_user","addTask","htmlFor","autoComplete","App","tasks","setTasks","i","taskList","map","task","key","tasksNoun","length","headingText","newTask","nanoid","remainingTasks","filter","editedTaskList","class","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a0249f1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TableContent(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(props.name);\r\n  const [newAddress, setNewAddress] = useState(props.address);\r\n  const [newPhone, setNewPhone] = useState(props.phone);\r\n  const newData = { newName, newAddress, newPhone };\r\n\r\n  function handleChangeName(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleChangeAddress(e) {\r\n    setNewAddress(e.target.value);\r\n  }\r\n\r\n  function handleChangePhone(e) {\r\n    setNewPhone(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (newData.newName && newData.newAddress && newData.newPhone) {\r\n      if (isNaN(newData.newPhone)) {\r\n        alert(\"Phone number must be number, not string!\");\r\n      } else {\r\n        props.editTask(props.id, newData);\r\n        setEditing(false);\r\n      }\r\n    } else {\r\n      alert(\"All field must be filled!\");\r\n    }\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          {props.number}\r\n        </td>\r\n        <td>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={newName}\r\n              onChange={handleChangeName}\r\n            ></input>\r\n          </form>\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newAddress}\r\n            onChange={handleChangeAddress}\r\n          ></input>\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newPhone}\r\n            onChange={handleChangePhone}\r\n          ></input>\r\n        </td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary mr-2\"\r\n            onClick={() => setEditing(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-info\" onClick={handleSubmit}>\r\n            Save\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <tbody>\r\n      <tr>\r\n        <td>{props.number}</td>\r\n        <td>{props.name}</td>\r\n        <td>{props.address}</td>\r\n        <td>{props.phone}</td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning mr-2\"\r\n            onClick={() => setEditing(true)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n\r\n  // return <tbody>{isEditing ? editingTemplate : viewTemplate}</tbody>;\r\n\r\n  if (isEditing) {\r\n    return editingTemplate;\r\n  }\r\n  return viewTemplate;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const data_user = { name, address, phone };\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (data_user.name && data_user.address && data_user.phone) {\r\n      if (isNaN(data_user.phone)) {\r\n        alert(\"Phone Number must be number, not string!\");\r\n      } else{\r\n        props.addTask(data_user);\r\n        setName(\"\");\r\n        setAddress(\"\");\r\n        setPhone(\"\");\r\n      }\r\n    } else {\r\n      alert(\"All data must be filled!\");\r\n    }\r\n  }\r\n\r\n  // function isNumber(value){\r\n  //   if(isNaN(value)){\r\n  //     console.log(`${value} is NOT number`);\r\n  //   } else{\r\n  //     console.log(`${value} is number`)\r\n  //   }\r\n  // }\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleChangeAddress(e) {\r\n    setAddress(e.target.value);\r\n  }\r\n\r\n  function handleChangePhone(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name-input\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          onChange={handleChangeName}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"address-input\">Address</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={address}\r\n          autoComplete=\"off\"\r\n          onChange={handleChangeAddress}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"phone-input\">Phone</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={phone}\r\n          autoComplete=\"off\"\r\n          onChange={handleChangePhone}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TableContent from \"./TableContent.js\";\nimport Form from \"./Form.js\";\nimport { nanoid } from \"nanoid\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  let i = 0;\n  const taskList = tasks.map((task) => (\n    <TableContent\n      id={task.id}\n      number={++i}\n      name={task.name}\n      address={task.address}\n      phone={task.phone}\n      key={task.id}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n  const tasksNoun = taskList.length > 1 ? \"datas\" : \"data\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(data_user) {\n    const newTask = {\n      id: \"list - \" + nanoid(),\n      name: data_user.name,\n      address: data_user.address,\n      phone: data_user.phone,\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newData) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return {\n          ...task,\n          name: newData.newName,\n          address: newData.newAddress,\n          phone: newData.newPhone,\n        };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  if (taskList.length > 0) {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h1 className=\"display-4 text-center\">Simple Local CRUD React</h1>\n          </div>\n          <h5>{headingText}</h5>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>#No</th>\n                <th>Name</th>\n                <th>Address</th>\n                <th>Phone</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            {taskList}\n          </table>\n          <Form addTask={addTask} />\n        </div>\n        <div class=\"footer-copyright text-center py-3\">\n          <p>\n            © 2020 Made by{\" \"}\n            <a href=\"yehezkielgunawan123.surge.sh\">Yehezkiel Gunawan</a>{\" \"}\n          </p>\n          <p>\n            Using resource and knowledge from{\" \"}\n            <a href=\"https://www.taniarascia.com/getting-started-with-react/\">\n              Tania Rascia\n            </a>{\" \"}\n          </p>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4 text-center\">Simple Local CRUD React</h1>\n        </div>\n        <h5>{headingText}</h5>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#No</th>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Phone</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-center\">\n            <td></td>\n            <td></td>\n            <td>\n              <h3>NO DATA</h3>\n            </td>\n            <td></td>\n            <td></td>\n          </tbody>\n        </table>\n        <Form addTask={addTask} />\n      </div>\n      <div class=\"footer-copyright text-center py-3\">\n        <p>\n          © 2020 Made by{\" \"}\n          <a href=\"yehezkielgunawan123.surge.sh\">Yehezkiel Gunawan</a>{\" \"}\n        </p>\n        <p>\n          Using resource and knowledge from{\" \"}\n          <a href=\"https://www.taniarascia.com/getting-started-with-react/\">\n            Tania Rascia\n          </a>{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst DATA = [\n  {id:\"list-1\" , name: \"Tono\", address: \"Jalan Kuburan 1\", phone: \"00000000\"},\n  {id:\"list-2\", name: \"Toni\", address: \"Jalan Kuburan 2\", phone: \"00000001\"},\n  {id:\"list-3\", name: \"Tino\", address: \"Jalan Kuburan 3\", phone: \"00000002\"},\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}